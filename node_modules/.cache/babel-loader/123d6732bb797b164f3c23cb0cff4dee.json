{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eugene\\\\source\\\\repos\\\\CaseApp\\\\CaseApp\\\\client\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from 'react';\nimport Main from './Main';\n\nclass MainComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: [],\n      selectedFilter: {},\n      input: \"\",\n      response: \"\"\n    };\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.handleSubmitAction = this.handleSubmitAction(this);\n  }\n\n  componentDidMount() {\n    fetch('https://localhost:44363/api/metrics').then(res => res.json()).then(state => this.setState({\n      filters: state\n    }));\n  }\n\n  handleFilterChange(e) {\n    this.setState({\n      selectedFilter: e.target.id\n    });\n  }\n\n  handleSubmitAction() {\n    if (this.state.selectedFilter == null) {} else {\n      fetch('https://localhost:44363/api/metrics' + this.state.selectedFilter.id, {\n        method: 'POST',\n        params: this.state.selectedFilter.id,\n        body: this.state.input\n      }).then(res => this.setState({\n        response: res.text\n      }));\n    }\n  }\n\n  updateInputValue(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Main, {\n      filters: this.state.filters,\n      onFilterChange: this.handleFilterChange,\n      onInputUpdate: this.updateInputValue,\n      onSubmit: this.handleSubmitAction,\n      response: this.state.response,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["C:/Users/Eugene/source/repos/CaseApp/CaseApp/client/src/components/MainComponent.js"],"names":["React","Component","Main","MainComponent","constructor","props","state","filters","selectedFilter","input","response","handleFilterChange","bind","updateInputValue","handleSubmitAction","componentDidMount","fetch","then","res","json","setState","e","target","id","method","params","body","text","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,EADD;AAETC,MAAAA,cAAc,EAAE,EAFP;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,QAAQ,EAAG;AAJF,KAAb;AAMA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB,IAAxB,CAA1B;AACH;;AACDC,EAAAA,iBAAiB,GACjB;AACIC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMX,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACb,MAAAA,OAAO,EAAED;AAAV,KAAd,CAFf;AAGH;;AAEDK,EAAAA,kBAAkB,CAACU,CAAD,EAClB;AACI,SAAKD,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAGa,CAAC,CAACC,MAAF,CAASC;AAA3B,KAAd;AACH;;AAEDT,EAAAA,kBAAkB,GAClB;AACI,QAAG,KAAKR,KAAL,CAAWE,cAAX,IAA6B,IAAhC,EAAqC,CACpC,CADD,MAEI;AACJQ,MAAAA,KAAK,CAAC,wCAAwC,KAAKV,KAAL,CAAWE,cAAX,CAA0Be,EAAnE,EACL;AACIC,QAAAA,MAAM,EAAC,MADX;AAEIC,QAAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWE,cAAX,CAA0Be,EAFtC;AAGIG,QAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWG;AAHpB,OADK,CAAL,CAMCQ,IAND,CAMMC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAACV,QAAAA,QAAQ,EAAEQ,GAAG,CAACS;AAAf,OAAd,CANb;AAOH;AACA;;AAEDd,EAAAA,gBAAgB,CAACQ,CAAD,EAChB;AACI,SAAKD,QAAL,CAAc;AAACX,MAAAA,KAAK,EAAEY,CAAC,CAACC,MAAF,CAASM;AAAjB,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAO,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,OAA1B;AAAmC,MAAA,cAAc,EAAE,KAAKI,kBAAxD;AAA4E,MAAA,aAAa,EAAE,KAAKE,gBAAhG;AAAkH,MAAA,QAAQ,EAAE,KAAKC,kBAAjI;AAAqJ,MAAA,QAAQ,EAAI,KAAKR,KAAL,CAAWI,QAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAhDgC;;AAmDrC,eAAeP,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Main from './Main'\r\n\r\nclass MainComponent extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            filters : [],\r\n            selectedFilter: {},\r\n            input: \"\",\r\n            response : \"\"\r\n        }\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.updateInputValue = this.updateInputValue.bind(this);\r\n        this.handleSubmitAction = this.handleSubmitAction(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('https://localhost:44363/api/metrics')\r\n        .then(res => res.json())\r\n        .then(state => this.setState({filters: state}));\r\n    }\r\n\r\n    handleFilterChange(e)\r\n    {\r\n        this.setState({selectedFilter : e.target.id});\r\n    }\r\n\r\n    handleSubmitAction()\r\n    {\r\n        if(this.state.selectedFilter == null){\r\n        }\r\n        else{\r\n        fetch('https://localhost:44363/api/metrics' + this.state.selectedFilter.id,\r\n        {   \r\n            method:'POST',\r\n            params: this.state.selectedFilter.id,\r\n            body:this.state.input\r\n        }) \r\n        .then(res => this.setState({response: res.text}));\r\n    }\r\n    }\r\n\r\n    updateInputValue(e)\r\n    {\r\n        this.setState({input: e.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(<Main filters={this.state.filters} onFilterChange={this.handleFilterChange} onInputUpdate={this.updateInputValue} onSubmit={this.handleSubmitAction} response = {this.state.response}/>);\r\n    }\r\n}\r\n\r\nexport default MainComponent;"]},"metadata":{},"sourceType":"module"}